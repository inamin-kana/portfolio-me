---
interface Props {
    class?: string;
}

const { class: className } = Astro.props;
---

<a onclick="copyText(this, 'kanako.inamine.96@gmail.com')" class={className} >
    <span class="textCopied">Copied</span>
    <slot />
</a>

<script is:inline>
    function copyText(anchorEl, text) {
        if (anchorEl && anchorEl.tagName === 'A') {
            anchorEl.addEventListener('click', function (e) {
            e.preventDefault();
            }, { once: true });
        }
    
        const copiedSpan = anchorEl.querySelector('.textCopied');
        if (!copiedSpan) return;
    
        copiedSpan.classList.add('-copied');
    
        setTimeout(() => {
            copiedSpan.classList.remove('-copied');
        }, 500);
    
        navigator.clipboard.writeText(text);
        }
    
        window.copyText = copyText;
</script>

<style lang="scss">
    @use '../styles/common/vars.scss' as *;  
	@use '../styles/common/mixin.scss' as *;

    .buttonA {
        cursor: pointer;
        display: inline-block;
        text-decoration: none;
        line-height: 1;
        background-color: var(--yellow);
        padding: var(--space-24) var(--space-40);
        box-shadow: 4px 4px 0px 0px var(--main);
        -webkit-box-shadow: 4px 4px 0px 0px var(--main);
        -moz-box-shadow: 4px 4px 0px 0px var(--main);
        position: relative;
        top: 0;
        left: 0;
        transition: transform .25s, box-shadow .25s;
        
        @include mq-pc {
            &:hover {
                transform: translateY(4px) translateX(4px);
                box-shadow: 0 0;
            }
        }
    }
    
    .textCopied {
        display: inline-block;
        font-size: var(--text-sm);
        position: absolute;
        top: -1.5em;
        left: 50%;
        transform: translateX(-50%);
        opacity: 0;

        &.-copied { opacity: 1; }
    }
</style>